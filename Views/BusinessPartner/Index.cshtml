@using _10xErp.Models
@model List<CustomerModal>
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox">
                <div class="ibox-title">
                    <h5>Business Master List</h5>
                    <div class="ibox-tools">
                        <input type="text" id="customSearchBox" class="form-control input-sm" placeholder="Search records" style="width: 200px; display: inline-block;" />
                    </div>
                </div>
                <div class="ibox-content">
                    <div class="table-responsive">
                        <table id="itemTable" class="table table-striped table-bordered table-hover">
                            <thead>
                                <tr>
                                    <th>#</th>
                                    <th>Card Code</th>
                                    <th>Card Name</th>
                                    <th>Phone 1</th>
                                    <th>Phone 2</th>
                                    <th>Contact Person</th>
                                    <th>Bill To Address</th>
                                    <th>Ship To Address</th>
                                    <th>View</th>
                                </tr>
                            </thead>
                            <tbody>
                                @*@if (Model != null)
                                {
                                    foreach (var item in Model)
                                    {
                                        <tr>
                                            <td>@item.CardCode</td>
                                            <td>@item.CardName</td>
                                            <td>@item.Phone1</td>
                                            <td>@item.Phone2</td>
                                            <td>@item.ContactPerson</td>
                                            <td>
                                                @item.BillToCount
                                            </td>
                                            <td>
                                                @item.ShipToCount
                                            </td>
                                            <td>
                                                @Html.ActionLink("View", "ViewCustomerDetails", "BusinessPartner", new { cardCode = item.CardCode }, new { @class = "btn btn-primary" })
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {

                                }*@


                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<link href="https://cdn.datatables.net/1.13.6/css/jquery.dataTables.min.css" rel="stylesheet" />

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>

@*<script>
        $(document).ready(function () {
            $('#itemTable').DataTable({
                pageLength: 10,
                lengthChange: false,
                searching: true,
                ordering: true,
                info: true,
                paging: true,
                language: {
                    searchPlaceholder: "Search records",
                    search: "",
                }
            });
        });
    </script>*@

<script>
    $(document).ready(function () {
        //var table = $('#itemTable').DataTable({
        //    pageLength: 10,
        //    lengthChange: false,
        //    searching: true, // Keep this true but hide the default search bar using CSS
        //    ordering: true,
        //    info: true,
        //    paging: true
        //});

        //// Hide default DataTables search box
        //$('#itemTable_filter').hide();

        //// Connect our custom search box
        //$('#customSearchBox').on('keyup', function () {
        //    table.search(this.value).draw();
        //});

        const detailsUrlTemplate = '@Url.Action("ViewCustomerDetails", "BusinessPartner", new { cardCode = "__id__" })';
        var table = $('#itemTable').DataTable({
            ajax: {
                url: '@Url.Action("GetCustomerList", "BusinessPartner")',
                data: function (d) {
                }
            },
            columns: [
                { data: null },
                { data: 'CardCode', className: 'text-left' },
                { data: 'CardName', className: 'text-Left' },
                { data: 'Phone1', className: 'text-right' },
                { data: 'Phone2', className: 'text-right' },
                { data: 'ContactPerson', className: 'text-left' },
                { data: 'BillToCount', className: 'text-left' },
                { data: 'ShipToCount', className: 'text-left' },
                {
                    data: null,
                    orderable: false,
                    searchable: false,
                    className: 'text-center',
                    render: function (data, type, row) {
                        const detailsUrl = detailsUrlTemplate.replace('__id__', row.CardCode);
                        return `<a href="${detailsUrl}" title="View Details"><i class="fa fa-eye"></i></a>`;
                    }
                }
            ],
            order: [[1, 'desc']],
            responsive: true,
            autoWidth: false,
            scrollX: true,
            scrollY: '400px',
            scrollCollapse: true,
            language: {
                emptyTable: "No records available"
            },
            initComplete: function () {
                this.api().columns.adjust();
            },
            drawCallback: function () {
                var api = this.api();
                var pageInfo = api.page.info();
                api.column(0, { page: 'current' }).nodes().each(function (cell, i) {
                    cell.innerHTML = pageInfo.start + i + 1;
                });

                api.columns.adjust();
            }
        });

    });
</script>

