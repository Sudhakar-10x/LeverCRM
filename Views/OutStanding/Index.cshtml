@*@model _10xErp.Models.SalesOrderViewModel*@
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox">
                <div class="ibox-content">
                    <form id="LoadReportForm" method="post" action="@Url.Action("ExportReportToPDF", "OutStanding")" target="_blank">
                        <div class="form-group row align-items-center">
                            <label for="frmCust" class="col-sm-3 col-form-label">Customer from :</label>
                            <div class="col-sm-3">
                                @*<input type="text" id="frmCust" class="form-control" />*@
                                <input type="text" id="FrmcustomerAutocomplete" class="form-control"
                                       name="Frmcustomer"
                                       @*value="@(string.IsNullOrEmpty(Model?.CardName) ? "" : Model.CardName)"*@
                                       placeholder="Start typing customer name..." />

                                <input type="hidden" id="hdnFromCustomerCode" name="FromCustomerCode" />
                                @*value="@Model?.CardCode"*@
                            </div>
                            <label for="toCust" class="col-sm-1 col-form-label">To :</label>
                            <div class="col-sm-3">
                                @*<input type="text" id="toCust" class="form-control" />*@
                                <input type="text" id="TocustomerAutocomplete" class="form-control"
                                       name="Frmcustomer"
                                       @*value="@(string.IsNullOrEmpty(Model?.CardName) ? "" : Model.CardName)"*@
                                       placeholder="Start typing customer name..." />

                                <input type="hidden" id="hdnToCustomerCode" name="ToCustomerCode" />
                            </div>
                        </div>
                        <div class="form-group row align-items-center">
                            <label for="toCust" class="col-sm-3 col-form-label">Sales Employee From :</label>
                            <div class="col-sm-3">
                                @*<input type="text" id="frmSlp" class="form-control" />*@
                                <input type="text" id="FrmSlpAutocomplete" class="form-control"
                                       name="FrmSlp"
                                       @*value="@(string.IsNullOrEmpty(Model?.CardName) ? "" : Model.CardName)"*@
                                       placeholder="Start typing Sales Employee name..." />

                                <input type="hidden" id="hdnFromSalesPersonCode" name="FromSalesPersonCode" />
                            </div>
                            <label for="toSlp" class="col-sm-1 col-form-label">To :</label>
                            <div class="col-sm-3">
                                @*<input type="text" id="toSlp" class="form-control" />*@
                                <input type="text" id="ToSlpAutocomplete" class="form-control"
                                       name="ToSlp"
                                       @*value="@(string.IsNullOrEmpty(Model?.CardName) ? "" : Model.CardName)"*@
                                       placeholder="Start typing Sales Employee name..." />

                                <input type="hidden" id="hdnToSalesPersonCode" name="ToSalesPersonCode" />
                            </div>
                        </div>
                        <div class="form-group row align-items-center">
                            <label for="fromDate" class="col-sm-3 col-form-label">As on Date : </label>
                            <div class="col-sm-3">
                                <input type="date" id="AsOnDate" class="form-control" />
                                <input type="hidden" id="hdnAsOnDate" name="AsOnDate" />
                            </div>
                            <div class="col-sm-4">
                                @*<button id="loadDataBtn" class="btn btn-primary">Load</button>*@
                                <button type="button" class="btn btn-success" onclick="ExportReportToPDF()">Load Report</button>

                            </div>
                        </div>
                    </form>
                </div>

            </div>
        </div>
    </div>
</div>

<!-- Custom styles -->
<style>
    .filter-section {
        margin-bottom: 20px;
    }

    #itemTable th, #itemTable td {
        vertical-align: middle !important;
    }

    #itemTable thead th {
        white-space: nowrap;
    }
</style>

@section scripts {

    @*<link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
            <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>*@
    <script type="text/javascript">

        $(document).ready(function () {
        $("#FrmcustomerAutocomplete").autocomplete({
        source: function (request, response) {
            $.ajax({
                url: '@Url.Action("GetCustomerListForDropDown", "OutStanding")',
                type: 'GET',
                data: { searchTerm: $('#FrmcustomerAutocomplete').val() },
                success: function (data) {
                    console.log(data);
                    response(data);
                },
                error: function () {
                    alert('Failed to load customer list.');
                }
            });
        },
            select: function (event, ui) {
                //console.log(ui);
                $("#hdnFromCustomerCode").val(ui.item.id);
            localStorage.setItem("Frmselected", ui.item.id);
            localStorage.setItem("FrmselectedCustomerName", ui.item.value);
        }
        });
        $("#TocustomerAutocomplete").autocomplete({
        source: function (request, response) {
            $.ajax({
                url: '@Url.Action("GetCustomerListForDropDown", "OutStanding")',
                type: 'GET',
                data: { customertype: 'C', searchTerm: $('#TocustomerAutocomplete').val() },
                success: function (data) {
                    response(data);
                },
                error: function () {
                    alert('Failed to load customer list.');
                }
            });
        },
        select: function (event, ui) {
            $("#hdnToCustomerCode").val(ui.item.id);
            localStorage.setItem("Toselected", ui.item.id);
            localStorage.setItem("ToselectedCustomerName", ui.item.value);
        }
        });

        $("#FrmSlpAutocomplete").autocomplete({
        source: function (request, response) {
            $.ajax({
                url: '@Url.Action("GetSalesEmployeeListForDropDown", "OutStanding")',
                type: 'GET',
                data: { searchTerm: $('#FrmSlpAutocomplete').val() },
                success: function (data) {
                    console.log(data);
                    response(data);
                },
                error: function () {
                    alert('Failed to load SalesEmployee list.');
                }
            });
        },
             select: function (event, ui) {
                 $("#hdnFromSalesPersonCode").val(ui.item.id);
                 localStorage.setItem("FrmSlpselected", ui.item.id);
                 localStorage.setItem("FrmSlpselectedSlpName", ui.item.value);
        }
        });
        $("#ToSlpAutocomplete").autocomplete({
        source: function (request, response) {
            $.ajax({
                url: '@Url.Action("GetSalesEmployeeListForDropDown", "OutStanding")',
                type: 'GET',
                data: { searchTerm: $('#ToSlpAutocomplete').val() },
                success: function (data) {
                    response(data);
                },
                error: function () {
                    alert('Failed to load SalesEmployee list.');
                }
            });
        },
        select: function (event, ui) {
            $("#hdnToSalesPersonCode").val(ui.item.id);
            localStorage.setItem("ToSlpselected", ui.item.id);
            localStorage.setItem("ToSlpselectedSlpName", ui.item.value);
        }
        });
            function getDefaultDateRange() {
                //const start = moment().startOf('month').format('YYYY-MM-DD');
                const today = moment().format('YYYY-MM-DD');
                const end = moment().endOf('month').format('YYYY-MM-DD');
                return { fromDate: today, toDate: end };
            }

            // ✅ Set default dates on page load
            const defaults = getDefaultDateRange();
            $('#AsOnDate').val(defaults.fromDate);
            $('#toDate').val(defaults.toDate);
            @*var baseUrl = '@Url.Action("SalesOrderDetails", "SalesOrder", new { id = "__docEntry__" })';
            var docEntry = row.DocEntry;
            var finalUrl = baseUrl.replace('__docEntry__', docEntry);*@


            // ✅ Load button functionality
            $('#loadDataBtn').click(function () {
                let selectedValues = $('#dropdown').val(); // array of selected values
                console.log(selectedValues);
                //table.ajax.reload(null, false); // retain pagination
            });

        });
        function ExportReportToPDF() {
            // Optional: set values into hidden fields before submit if needed
            // $('#FromCustomerID').val($('#FromCustomerSelect').val());
            //$('#hdnFromCustomerCode').val($('#FrmcustomerAutocomplete').val());
            //$('#hdnToCustomerCode').val($('#TocustomerAutocomplete').val());
            //$('#hdnFromSalesPersonCode').val($('#FrmSlpAutocomplete').val());
            //$('#hdnToSalesPersonCode').val($('#ToSlpAutocomplete').val());
            $('#hdnAsOnDate').val($('#AsOnDate').val());

            $('#LoadReportForm').submit(); // Submit the form to the controller
            setTimeout(function () {
                clearFormFields();
            }, 2000);
        }
        function ExportReportToPDFOlder() {
            // Set hidden fields before submitting
            $('#hdnFromCustomerCode').val($('#FromCustomerCode').val());
            $('#hdnToCustomerCode').val($('#ToCustomerCode').val());
            $('#hdnFromSalesPersonCode').val($('#FromSalesPersonCode').val());
            $('#hdnToSalesPersonCode').val($('#ToCustomerCode').val());
            $('#hdnAsOnDate').val($('#AsOnDate').val());

            // Submit the form (opens PDF in new tab)
            $('#LoadReportForm').submit();

            // Clear the form after a short delay (enough time for PDF to trigger)
            setTimeout(function () {
                clearFormFields();
            }, 2000);
        }

        function clearFormFields() {
            // Clear visible inputs
            $('#FrmcustomerAutocomplete').val('');
            $('#TocustomerAutocomplete').val('');
            $('#FrmSlpAutocomplete').val('');
            $('#ToSlpAutocomplete').val('');
            //$('#AsOnDate').val('');

            // Clear hidden fields
            $('#hdnFromCustomerCode').val('');
            $('#hdnToCustomerCode').val('');
            $('#hdnFromSalesPersonCode').val('');
            $('#hdnToSalesPersonCode').val('');
            //$('#hdnAsOnDate').val('');

            // Optional: remove values from localStorage if needed
            localStorage.removeItem("Frmselected");
            localStorage.removeItem("FrmselectedCustomerName");
            localStorage.removeItem("Toselected");
            localStorage.removeItem("ToselectedCustomerName");
            localStorage.removeItem("FrmSlpselected");
            localStorage.removeItem("FrmSlpselectedSlpName");
            localStorage.removeItem("ToSlpselected");
            localStorage.removeItem("ToSlpselectedSlpName");
        }


        function ExportReportToPDFOlder() {
            // Fill values (from input fields or hardcoded for demo)
            //$('#td').val($('#tdInput').val()); // Or hardcoded value
            //$('#customerCode').val($('#customerInput').val());
            //$('#salesPersonCode').val($('#salesPersonInput').val());

            // Submit the form to trigger file download
           

            $('#LoadReportForm').submit();
        }
    function ExportReportToPDFOld() {
            debugger;
            var formData = $("#LoadReportForm").serialize();

            $.ajax({
                type: "POST",
                url:  '@Url.Action("ExportReportToPDF", "OutStanding")',
                //data: formData,
                success: function (response) {
                    //console.log(response);
                    //if (response.IsSucess) {
                    //    alert(response.message);

                    //    // Optionally reset the form or redirect
                    //} else {
                    //    alert("Failed to create sales order.");
                    //}
                    @*var successMessage = '@TempData["SuccessMessage"]';
                    var infoMessage = '@TempData["InfoMessage"]';
                    var errMessage = '@TempData["ErrorMessage"]';

                        if (successMessage) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Success',
                                text: successMessage,
                                confirmButtonColor: '#3085d6',
                                confirmButtonText: 'OK'
                            });
                        }

                        if (infoMessage) {
                            Swal.fire({
                                icon: 'info',
                                title: 'Information',
                                text: infoMessage,
                                confirmButtonColor: '#3085d6',
                                confirmButtonText: 'OK'
                            });
                        }*@
                },
                error: function () {
                    alert("An error occurred while creating the sales order.");
                }
            });
        }
    @*function onCustomerSelected(SelectedItem) {
    var customerID = SelectedItem["id"];
if (customerID) {
//$('#customerCode').val(customerID);
$.ajax({
url: '@Url.Action("GetCustomer", "SalesOrder")',
type: 'GET',
data: { CustId: customerID },
success: function (data) {

$("#CardCode").val(customerID);
$('#leadsearch-form-modal').modal('hide');
},
error: function () {
alert("Failed to load customer details.");
}
        });
}
}*@
    </script>
}

